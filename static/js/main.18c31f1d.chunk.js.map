{"version":3,"sources":["pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","tasks","setTasks","useState","newTask","setNewTask","React","createElement","className","type","placeholder","value","onChange","event","target","onClick","trim","t","map","task","index","key","updatedTasks","filter","_","i","deleteTask","moveTaskUp","length","moveTaskDown","App","Fragment","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4MAuEeA,MApEf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,IA8BvC,OAAQG,IAAAC,cAAA,OAAKC,UAAU,cACrBF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,mBACZC,MAAOP,EACPQ,SApCN,SAA0BC,GACxBR,EAAWQ,EAAMC,OAAOH,UAqCtBL,IAAAC,cAAA,UACEC,UAAU,aACVO,QArCN,WACwB,KAAnBX,EAAQY,SACTd,EAASe,GAAG,IAAIA,EAAEb,IAClBC,EAAW,OAkCS,QAItBC,IAAAC,cAAA,UACGN,EAAMiB,IAAI,CAACC,EAAMC,IAChBd,IAAAC,cAAA,MAAIc,IAAKD,GACPd,IAAAC,cAAA,QAAMC,UAAU,QAAQW,GACxBb,IAAAC,cAAA,UACEC,UAAU,gBACVO,QAASA,IAxCnB,SAAoBK,GACtB,MAAME,EAAerB,EAAMsB,OAAO,CAACC,EAAEC,IAAKA,IAAIL,GAC9ClB,EAASoB,GAsCkBI,CAAWN,IAAQ,UAEpCd,IAAAC,cAAA,UACEC,UAAU,cACVO,QAASA,IAxCnB,SAAoBK,GAEtB,GAAGA,EAAM,EAAE,CACX,MAAME,EAAe,IAAIrB,IACxBqB,EAAaF,GAAOE,EAAaF,EAAM,IAAK,CAACE,EAAaF,EAAM,GAAGE,EAAaF,IACjFlB,EAASoB,IAmCkBK,CAAWP,IAAQ,MAElCd,IAAAC,cAAA,UACAC,UAAU,cACVO,QAASA,IApCnB,SAAsBK,GACpB,GAAGA,EAAMnB,EAAM2B,OAAO,EAAE,CACtB,MAAMN,EAAe,IAAIrB,IACxBqB,EAAaF,GAAOE,EAAaF,EAAM,IAAK,CAACE,EAAaF,EAAM,GAAGE,EAAaF,IACjFlB,EAASoB,IAgCYO,CAAaT,IAAQ,aC9CjCU,MAff,WACE,OACExB,IAAAC,cAAAD,IAAAyB,SAAA,KACAzB,IAAAC,cAACP,EAAI,QCMMgC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACuB,EAAG,QAORE,K","file":"static/js/main.18c31f1d.chunk.js","sourcesContent":["\nimport React, { useState } from \"react\";\n\nfunction Home() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  function handleInputChage(event) {\n    setNewTask(event.target.value);\n  }\n  function addTask() {\n    if(newTask.trim() !== \"\"){\n      setTasks(t=>[...t,newTask]);\n      setNewTask(\"\");\n    }\n    \n  }\n  function deleteTask(index) {\nconst updatedTasks = tasks.filter((_,i)=> i!==index);\nsetTasks(updatedTasks);\n  };\n  function moveTaskUp(index) {\n\nif(index>0){\nconst updatedTasks = [...tasks];\n[updatedTasks[index],updatedTasks[index-1]] =[updatedTasks[index-1],updatedTasks[index]]\nsetTasks(updatedTasks);\n}\n  };\n  function moveTaskDown(index) {\n    if(index<tasks.length-1){\n      const updatedTasks = [...tasks];\n      [updatedTasks[index],updatedTasks[index+1]] =[updatedTasks[index+1],updatedTasks[index]]\n      setTasks(updatedTasks);\n  }\n}\n  return (<div className=\"to-do-list\">\n    <h1> To-Do-List</h1>\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a task....\"\n        value={newTask}\n        onChange={handleInputChage}\n      />\n      <button\n        className=\"add-button\"\n        onClick={addTask}>\n        Add\n      </button>\n    </div>\n    <ol>\n      {tasks.map((task, index) =>\n        <li key={index}>\n          <span className=\"text\">{task}</span>\n          <button\n            className=\"delete-button\"\n            onClick={() => deleteTask(index)}>\n            Delete</button>\n          <button\n            className=\"move-button\"\n            onClick={() => moveTaskUp(index)}>\n            Up</button>\n            <button\n            className=\"move-button\"\n            onClick={() => moveTaskDown(index)}>\n            Down</button>\n        </li>)}\n    </ol>\n  </div>)\n}\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nfunction App() {\n  return (\n    <>\n    <Home/>\n      {/* <BrowserRouter basename='/todo-app'>\n      <Routes>\n        <Route index element = {<Login />} />\n        <Route path='/login' element={<Login/>}/>\n        <Route path='/pages/Home' element={<Home/>}/>\n      </Routes>\n      </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}